"use strict";(self.webpackChunktbia_documentation=self.webpackChunktbia_documentation||[]).push([[1819],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(n),f=i,m=d["".concat(l,".").concat(f)]||d[f]||s[f]||a;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4887:function(e,t,n){n.d(t,{UE:function(){return o},h8:function(){return i},qh:function(){return l},y$:function(){return a}});n(87462),n(63366),n(67294);var r=n(3905),i=function(e){e.children;var t=e.text;return(0,r.kt)("span",{style:{backgroundColor:"#822",color:"#faa",border:"1px #faa solid",borderRadius:"5rem",padding:".2rem .4rem",fontSize:".6rem"}},t)},a=function(e){var t=e.children;return(0,r.kt)("span",{style:{color:"#faa"}},t)};function o(e){e.children;var t=e.version,n="#ffffff";return(0,r.kt)("span",{style:{backgroundColor:"#414141",color:n,border:"1px #ffffff solid",borderRadius:"5px",padding:".05rem .4rem",fontSize:".75rem"}},t)}function c(e,t,n,i){return(0,r.kt)("div",{style:{backgroundColor:i,color:n,border:"1px "+n+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}var l=function(e){e.children;return c(0,"Released","#afa","#181")}},91580:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return s}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=(n(4887),["components"]),c={sidebar_position:6,title:"Interaction Types"},l=void 0,p={unversionedId:"features/interact-active-type",id:"version-1.5.2/features/interact-active-type",title:"Interaction Types",description:"Interaction Types for Interact Active",source:"@site/versioned_docs/version-1.5.2/features/interact-active-type.mdx",sourceDirName:"features",slug:"/features/interact-active-type",permalink:"/TBIA-Documentation/docs/features/interact-active-type",draft:!1,editUrl:"https://github.com/twistedbytes-net/TBIA-Documentation/edit/master/versioned_docs/version-1.5.2/features/interact-active-type.mdx",tags:[],version:"1.5.2",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Interaction Types"},sidebar:"tutorialSidebar",previous:{title:"Multiple Tap Input Action",permalink:"/TBIA-Documentation/docs/features/using-multiple-tap"},next:{title:"Unreal Engine 4 Plugins",permalink:"/TBIA-Documentation/docs/integration_guides/unreal-engine-4-plugins"}},u={},s=[{value:"Interaction Types for Interact Active",id:"interaction-types-for-interact-active",level:2},{value:"Timed Interaction",id:"timed-interaction",level:3},{value:"Input Hold Interaction",id:"input-hold-interaction",level:3},{value:"Gameplay Event Interaction",id:"gameplay-event-interaction",level:3}],d={toc:s};function f(e){var t=e.components,c=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,c,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"interaction-types-for-interact-active"},"Interaction Types for Interact Active"),(0,a.kt)("p",null,"The struct ",(0,a.kt)("inlineCode",{parentName:"p"},"TBIA_InteractionContext")," now allows you to specify for each ",(0,a.kt)("em",{parentName:"p"},"Interactable Actor"),"\nhow you want interactions to be handled."),(0,a.kt)("p",null,"You can choose between the following types:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Timed Interaction"),(0,a.kt)("li",{parentName:"ul"},"Input Hold Interaction"),(0,a.kt)("li",{parentName:"ul"},"Gameplay Event Interaction")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Interaction Types",src:n(42913).Z,width:"741",height:"688"})),(0,a.kt)("h3",{id:"timed-interaction"},"Timed Interaction"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Timed Interaction")," is the default interaction type where the Gameplay Ability ",(0,a.kt)("inlineCode",{parentName:"p"},"TBIA_GAInteractActive"),"\nwill wait for a specific duration set in the ",(0,a.kt)("em",{parentName:"p"},"Interaction Context"),". When the wait time is over, the interaction\nis finished."),(0,a.kt)("h3",{id:"input-hold-interaction"},"Input Hold Interaction"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Input Hold Interaction")," changes the interaction logic as follows:"),(0,a.kt)("p",null,"When the ",(0,a.kt)("em",{parentName:"p"},"Input Key")," that is bound to ",(0,a.kt)("inlineCode",{parentName:"p"},"TBIA_GAInteractActive")," is triggered, the interaction logic will\nflow till ",(0,a.kt)("inlineCode",{parentName:"p"},"Pre-Interact")," and then ",(0,a.kt)("inlineCode",{parentName:"p"},"IsInteractionStillValid")," will be called as long as the input key is still held."),(0,a.kt)("p",null,"After releasing the ",(0,a.kt)("em",{parentName:"p"},"Input Key"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Post-Interact")," will be called and the interaction ends."),(0,a.kt)("h3",{id:"gameplay-event-interaction"},"Gameplay Event Interaction"),(0,a.kt)("p",null,"In this type of interaction, when activating ",(0,a.kt)("inlineCode",{parentName:"p"},"TBIA_GAInteractActive")," by triggering the ",(0,a.kt)("em",{parentName:"p"},"Input Key")," that is already\nbound to it, it will start the interaction and call ",(0,a.kt)("inlineCode",{parentName:"p"},"Pre-Interact"),". After that ",(0,a.kt)("inlineCode",{parentName:"p"},"IsInteractionStillValid")," is being called\non timer from the value of ",(0,a.kt)("inlineCode",{parentName:"p"},"CheckInteractionWhileWaiting")," and will be kept triggered and waiting until a gameplay event\nis being called on the interacting actor with the gameplay tag ",(0,a.kt)("inlineCode",{parentName:"p"},"TBIA.Event.Interaction.InteractActiveEnd"),"."))}f.isMDXComponent=!0},42913:function(e,t,n){t.Z=n.p+"assets/images/01_interaction-context-6e4f7c0916733b5b619f6f9a386c13c6.png"}}]);